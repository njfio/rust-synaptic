[package]
name = "synaptic"
version = "0.1.0"
edition = "2021"
authors = ["Nicholas Ferguson <me@njf.io>"]
description = "Intelligent AI agent memory system with dynamic knowledge graphs and smart content updates"
license = "MIT"
repository = "https://github.com/njfio/rust-synaptic"
keywords = ["ai", "memory", "knowledge-graph", "agent", "intelligent"]
categories = ["data-structures", "algorithms", "science"]

[dependencies]
# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Async runtime
tokio = { version = "1.0", features = ["full"] }
async-trait = "0.1"

# Data structures
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
indexmap = "2.0"

# Storage
sled = "0.34"
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "postgres", "chrono", "uuid", "json"], optional = true }

# Vector operations and similarity
ndarray = "0.15"
ordered-float = "4.0"

# Phase 1: Advanced AI Integration - Vector Embeddings
# Using simple TF-IDF implementation for baseline

# Phase 2: Distributed Architecture & Real-time Systems
tokio-stream = "0.1"
futures = "0.3"
tonic = { version = "0.10", optional = true }
prost = { version = "0.12", optional = true }
tonic-build = { version = "0.10", optional = true }
rdkafka = { version = "0.36", features = ["cmake-build"], optional = true }
redis = { version = "0.24", features = ["tokio-comp", "cluster"], optional = true }
# raft = { version = "0.7", optional = true }
# protobuf = { version = "3.4", optional = true }
lz4 = { version = "1.24", optional = true }
crossbeam = "0.8"
dashmap = "5.5"
parking_lot = "0.12"
tokio-tungstenite = { version = "0.20", optional = true }
futures-util = { version = "0.3", optional = true }

# Concurrency (already included above)

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = "0.3"

# Utilities
rayon = "1.7"
hex = "0.4"
sha2 = "0.10"
rand = "0.8"

# Real External Integrations
reqwest = { version = "0.11", features = ["json", "stream"], optional = true }
candle-core = { version = "0.3", optional = true }
candle-nn = { version = "0.3", optional = true }
candle-transformers = { version = "0.3", optional = true }
tokenizers = { version = "0.15", optional = true }
plotters = { version = "0.3", optional = true }
plotters-backend = { version = "0.3", optional = true }
image = { version = "0.24", optional = true }
base64 = { version = "0.21", optional = true }
dotenvy = "0.15.7"

[dev-dependencies]
tempfile = "3.8"
criterion = "0.5"

[features]
default = ["file-storage", "memory-storage", "embeddings"]
file-storage = []
memory-storage = []
sql-storage = ["sqlx"]
embeddings = []
vector-search = []
distributed = ["rdkafka", "redis", "tonic", "lz4"]
realtime = ["tokio-tungstenite", "futures-util"]
analytics = []
ml-models = ["candle-core", "candle-nn", "candle-transformers", "tokenizers"]
llm-integration = ["reqwest", "base64"]
visualization = ["plotters", "plotters-backend", "image"]
external-integrations = ["sql-storage", "ml-models", "llm-integration", "visualization"]
security = []

[[example]]
name = "basic_usage"
path = "examples/basic_usage.rs"

[[example]]
name = "phase3_analytics"
path = "examples/phase3_analytics.rs"
required-features = ["analytics"]

[[example]]
name = "real_integrations"
path = "examples/real_integrations.rs"

[[example]]
name = "combined_full_system"
path = "examples/combined_full_system.rs"
required-features = ["distributed", "external-integrations", "embeddings"]

[[example]]
name = "phase4_security_privacy"
path = "examples/phase4_security_privacy.rs"
required-features = ["security"]



[profile.release]
lto = true
codegen-units = 1
panic = "abort"
